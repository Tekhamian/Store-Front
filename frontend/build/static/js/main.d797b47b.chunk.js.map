{"version":3,"sources":["components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","screens/HomeScreen.js","screens/ProductScreen.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","as","name","Text","rating","numReviews","price","HomeScreen","useState","products","setProducts","useEffect","a","axios","get","data","fetchProducts","map","key","sm","md","lg","xl","ProductScreen","match","setProduct","params","fetchProduct","Image","alt","fluid","ListGroup","Item","description","countInStock","Button","type","disabled","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4RAqCeA,EAjCA,WACX,OACI,gCAEI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,kBAAgB,GACzD,kBAACC,EAAA,EAAD,KACI,kBAAC,gBAAD,CAAeC,GAAG,KACd,kBAACN,EAAA,EAAOO,MAAR,qBAGJ,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,oBAEhB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAAC,gBAAD,CAAeP,GAAG,SACd,kBAACM,EAAA,EAAIE,KAAL,KACI,uBAAGD,UAAU,wBAAb,WAIR,kBAAC,gBAAD,CAAeP,GAAG,UACd,kBAACM,EAAA,EAAIE,KAAL,KACI,uBAAGD,UAAU,eAAb,oB,gBCPrBE,EAdA,WACX,OACI,gCACI,kBAACV,EAAA,EAAD,KACI,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKJ,UAAY,oBAAjB,4C,yCCPdK,EAAS,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAC1B,OACI,yBAAKR,UAAU,UAEX,8BACI,uBAAGS,MAAO,CAACD,SACPR,UACIM,GAAS,EACH,cACAA,GAAS,GACT,uBACA,iBAMlB,8BACI,uBAAGG,MAAO,CAACD,SACPR,UACIM,GAAS,EACH,cACAA,GAAS,IACT,uBACA,iBAMlB,8BACI,uBAAGG,MAAO,CAACD,SACPR,UACIM,GAAS,EACH,cACAA,GAAS,IACT,uBACA,iBAMlB,8BACI,uBAAGG,MAAO,CAACD,SACPR,UACIM,GAAS,EACH,cACAA,GAAS,IACT,uBACA,iBAMlB,8BACI,uBAAGG,MAAO,CAACD,SACPR,UACIM,GAAS,EACH,cACAA,GAAS,IACT,uBACA,iBAId,8BAAOC,GAAQA,KAM/BF,EAAOK,aAAe,CAACF,MAAO,UAQfH,QCrDAM,EA1BC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,kBAACC,EAAA,EAAD,CAAMb,UAAU,oBACZ,kBAAC,OAAD,CAAMP,GAAE,mBAAcmB,EAAQE,MAC1B,kBAACD,EAAA,EAAKE,IAAN,CAAUC,IAAKJ,EAAQK,MAAO5B,QAAQ,SAG1C,kBAACwB,EAAA,EAAKK,KAAN,KAEI,kBAAC,OAAD,CAAMzB,GAAE,mBAAcmB,EAAQE,MAC1B,kBAACD,EAAA,EAAKM,MAAN,CAAYC,GAAG,OACX,gCAASR,EAAQS,QAIzB,kBAACR,EAAA,EAAKS,KAAN,CAAWF,GAAG,OACV,kBAAC,EAAD,CAAQd,MAAOM,EAAQW,OAAQhB,KAAI,UAAKK,EAAQY,WAAb,eAGvC,kBAACX,EAAA,EAAKS,KAAN,CAAWF,GAAG,MAAd,IAAqBR,EAAQa,U,iBCQ9BC,EA3BI,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACdC,EADc,KACJC,EADI,KAYrB,OATAC,qBAAU,YACa,uCAAG,8BAAAC,EAAA,sEACEC,IAAMC,IAAI,iBADZ,gBACZC,EADY,EACZA,KACPL,EAAYK,GAFO,2CAAH,qDAKnBC,KACD,IAGC,oCACG,oDACA,kBAAChC,EAAA,EAAD,KAEKyB,EAASQ,KAAI,SAAAxB,GAAO,OAChB,kBAACR,EAAA,EAAD,CAAKiC,IAAKzB,EAAQE,IAAKwB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7C,kBAAC,EAAD,CAAS7B,QAAWA,W,wBC2E7B8B,EA7FO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACDhB,mBAAS,IADR,mBACxBf,EADwB,KACfgC,EADe,KAY/B,OATAd,qBAAU,YACY,uCAAG,8BAAAC,EAAA,sEACGC,IAAMC,IAAN,wBAA2BU,EAAME,OAAO/C,KAD3C,gBACXoC,EADW,EACXA,KACPU,EAAWV,GAFO,2CAAH,qDAKlBY,KACD,CAACH,IAGA,oCACI,kBAAC,OAAD,CAAM3C,UAAU,qBAAqBP,GAAG,KAAxC,iBAGA,kBAACU,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKmC,GAAI,GAEL,kBAACQ,EAAA,EAAD,CAAO/B,IAAKJ,EAAQK,MAAO+B,IAAKpC,EAAQS,KAAM4B,OAAK,KAGvD,kBAAC7C,EAAA,EAAD,CAAKmC,GAAI,GACL,kBAACW,EAAA,EAAD,KACI,kBAACA,EAAA,EAAUC,KAAX,CAAgBnD,UAAU,cACtB,4BAAKY,EAAQS,OAGjB,kBAAC6B,EAAA,EAAUC,KAAX,CAAgBnD,UAAU,cACtB,kBAAC,EAAD,CACIM,MAAOM,EAAQW,OACfhB,KAAI,UAAKK,EAAQY,WAAb,eAIZ,kBAAC0B,EAAA,EAAUC,KAAX,CAAgBnD,UAAU,cAA1B,WACaY,EAAQa,OAGrB,kBAACyB,EAAA,EAAUC,KAAX,CAAgBnD,UAAU,cAA1B,iBACmBY,EAAQwC,eAKnC,kBAAChD,EAAA,EAAD,CAAKmC,GAAI,GACL,kBAAC1B,EAAA,EAAD,KACI,kBAACqC,EAAA,EAAD,CAAW7D,QAAQ,SACf,kBAAC6D,EAAA,EAAUC,KAAX,KACI,kBAAChD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,oBAIA,kBAACA,EAAA,EAAD,KACI,gCAASQ,EAAQa,UAK7B,kBAACyB,EAAA,EAAUC,KAAX,KACI,kBAAChD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,gBAIA,kBAACA,EAAA,EAAD,KACKQ,EAAQyC,aAAe,EAAI,WAAa,kBAKrD,kBAACH,EAAA,EAAUC,KAAX,KACI,kBAACG,EAAA,EAAD,CACItD,UAAU,YACVuD,KAAK,SACLlE,QAAQ,UAERmE,SAAmC,IAAzB5C,EAAQyC,cALtB,sBCtDjBI,EAlBH,WACV,OAEE,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,0BAAMzD,UAAU,QACd,kBAACR,EAAA,EAAD,KAEE,kBAAC,IAAD,CAAOkE,KAAK,IAAIC,UAAWjC,EAAYkC,OAAK,IAE5C,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWjB,MAG1C,kBAAC,EAAD,QCVcmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCXNsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d797b47b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {Container, Navbar, Nav} from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            {/* variant='dark' =  Bootstrap element that lightens the color of the navlinks */}\r\n            <Navbar bg=\"Dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Store-Front</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        {/* ml-auto = margin-left-auto = Bootstrap element that floats the navlinks over to the right */}\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link>\r\n                                    <i className='fas fa-shopping-cart'> Shop</i>\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link>\r\n                                    <i className='fas fa-user'> Sign In</i>\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n// React-Bootstrap elements being imported\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className = 'text-center py-3'> \r\n                        Copyright &copy; Tekhamian Store-Front\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            {/* 1st Star */}\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                        value >= 1 \r\n                            ? 'fas fa-star' \r\n                            : value >= 0.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star' \r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            {/* 2nd Star */}\r\n            <span>\r\n                <i style={{color}} \r\n                    className={\r\n                        value >= 2\r\n                            ? 'fas fa-star' \r\n                            : value >= 1.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star' \r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            {/* 3rd Star */}\r\n            <span>\r\n                <i style={{color}} \r\n                    className={\r\n                        value >= 3 \r\n                            ? 'fas fa-star' \r\n                            : value >= 2.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star' \r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            {/* 4th Star */}\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                        value >= 4 \r\n                            ? 'fas fa-star' \r\n                            : value >= 3.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star' \r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            {/* 5th Star */}\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                        value >= 5 \r\n                            ? 'fas fa-star' \r\n                            : value >= 4.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star' \r\n                    }>\r\n                </i>\r\n            </span>\r\n                <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Setting for default color of the rating stars\r\nRating.defaultProps = {color: 'orange'};\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                {/* originlly were <a href={x}>tags... but the <Link to={x}>tags works better for a single page app - no reloads */}\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />  \r\n                </Card.Text>\r\n\r\n                <Card.Text as='h5'>${product.price}</Card.Text>\r\n               \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Product from '../components/Product.js';\r\nimport axios from 'axios'\r\n\r\nconst HomeScreen = () => {\r\n    const [products, setProducts] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n           const {data} = await axios.get('/api/products') \r\n           setProducts(data)\r\n        }\r\n\r\n        fetchProducts()      \r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n           <h1>Store-Front Products</h1> \r\n           <Row>\r\n               {/* (.map) creates a list */}\r\n               {products.map(product =>(\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product = {product} />\r\n                    </Col>\r\n               ))}\r\n           </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Image, ListGroup, Card, Button} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport axios from 'axios'\r\n\r\nconst ProductScreen = ({match}) => {\r\n    const [product, setProduct] = useState({})\r\n\r\n    useEffect(() => {\r\n        const fetchProduct = async () => {\r\n           const {data} = await axios.get(`/api/products/${match.params.id}`) \r\n           setProduct(data)\r\n        }\r\n\r\n        fetchProduct()      \r\n    }, [match])\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Previous Page\r\n            </Link>\r\n            <Row>\r\n\r\n                <Col md={6}>\r\n                    {/* fluid ensures that the image does not overflow its container */}\r\n                    <Image src={product.image} alt={product.name} fluid/>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item className='list-group'>\r\n                            <h5>{product.name}</h5>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className='list-group'>\r\n                            <Rating\r\n                                value={product.rating}\r\n                                text={`${product.numReviews} reviews`}\r\n                            />\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className='list-group'>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className='list-group'>\r\n                            Description: ${product.description}\r\n                        </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Item Price:\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <strong>{product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Status:\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    className='btn-block'\r\n                                    type='button'\r\n                                    variant='primary'\r\n                                    // If item is out of stock then button is disabled\r\n                                    disabled={product.countInStock === 0}\r\n                                >\r\n                                    Add to Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React from 'react';\n// Will use BrowserRouter as an alias (named Router)... also the entire return block below must be wrapped in the Router\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Container} from 'react-bootstrap'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\n\nconst App = () => {\n  return (\n    // empty element (<> = fragment) is all we need for this section right now.\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          {/* the word \"exact\" @ end makes sure that homepage address ('/') is acurate */}\n          <Route path='/' component={HomeScreen} exact />\n          {/* the ':id' is a placeholder for product-id - notice exact is not needed for these pages */}\n          <Route path='/product/:id' component={ProductScreen}/>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}